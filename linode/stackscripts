#!/bin/bash
#
# Initial deployment for a server that holds application and database
#
#<UDF name="hostname" label="The hostname for the new Linode.">
# HOSTNAME=
#
#<UDF name="fqdn" label="The new Linode's Fully Qualified Domain Name">
# FQDN=
#
#<UDF name="deploypass" label="Password for the deploy user">
# DEPLOYPASS=
#
#<UDF name="keyfile" label="url of authorized keys">
# KEYFILE=
#
#<UDF name="projectname" label="this will be the username for the db and the dir name">
# PROJECTNAME=
#
#<UDF name="pgversion" label="Version of postgresql ie 9.4">
# PGVERSION=

# This sets the variable $IPADDR to the IP address the new Linode receives.
IPADDR=$(/sbin/ifconfig eth0 | awk '/inet / { print $2 }' | sed 's/addr://')

apt-get -y upgrade

# This section sets the hostname.
echo $HOSTNAME > /etc/hostname
hostname -F /etc/hostname

# This section sets the Fully Qualified Domain Name (FQDN) in the hosts file.
echo $IPADDR $FQDN $HOSTNAME >> /etc/hosts

# Prepared external sources
apt-get install -y python-software-properties software-properties-common
add-apt-repository -y ppa:chris-lea/node.js
add-apt-repository -y ppa:chris-lea/nginx-devel
add-apt-repository -y ppa:chris-lea/redis-server
add-apt-repository -y ppa:saltstack/salt
apt-get update

# Set timezone
echo "America/Bogota" | tee /etc/timezone
dpkg-reconfigure --frontend noninteractive tzdata

# Base packages installations for Django
apt-get install -y build-essential python-dev python2.7-dev python-setuptools
apt-get install -y git-core wget
apt-get install -y libxslt1-dev libxml2-dev
apt-get install -y postgresql-$PGVERSION libpq-dev libffi-dev postgresql-contrib-$PGVERSION
apt-get install -y libjpeg62-dev zlib1g-dev libfreetype6-dev
apt-get install -y ruby1.9.1 cloc ruby1.9.1-dev
apt-get install -y redis-server
apt-get install -y nodejs
apt-get install -y fail2ban upstart logrotate
easy_install pip
gem install bundle
npm -g install yuglify jshint bower
apt-get -y install nginx nginx-common nginx-full
pip install virtualenv uwsgi

# Jenkins needed packages
apt-get install -y openjdk-7-jdk

# Base user
useradd -d /opt/deploy -G www-data deploy
echo "$DEPLOYPASS\n$DEPLOYPASS" | passwd deploy
mkdir -p /opt/deploy/.ssh/
wget $KEYFILE -O /opt/deploy/.ssh/authorized_keys
mkdir -p "/opt/deploy/"$PROJECTNAME"_app"

# salt basic installation
apt-get install -y salt-master salt-minion salt-syndic salt-cloud salt-ssh salt-api
apt-get autoremove

# database related stuff
# database user creation
su postgres -c "psql -c \"CREATE user $PROJECTNAME password '"'"'$PROJECTNAME'"'"' ;\""
# database creation
su postgres -c "createdb -O $PROJECTNAME $PROJECTNAME"
echo "local $PROJECTNAME $PROJECTNAME md5" >> /etc/postgresql/$PGVERSION/main/pg_hba.conf
# postgresl postconfiguration
sed -i "s/#password_encryption = on/password_encryption = on/g" /etc/postgresql/$PGVERSION/main/postgresql.conf
/etc/init.d/postgresql restart

