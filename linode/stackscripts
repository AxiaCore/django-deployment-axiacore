#!/bin/bash

IPADDR=$(/sbin/ifconfig eth0 | awk '/inet / { print $2 }' | sed 's/addr://')

echo $IPADDR $FQDN $HOSTNAME >> /etc/hosts

echo $HOSTNAME > /etc/hostname
hostname -F /etc/hostname

echo "America/Bogota" | tee /etc/timezone
dpkg-reconfigure --frontend noninteractive tzdata

add-apt-repository -y ppa:chris-lea/node.js
add-apt-repository -y ppa:chris-lea/nginx-devel
add-apt-repository -y ppa:chris-lea/redis-server
add-apt-repository -y ppa:saltstack/salt

apt-get update

apt-get install -y \
  python-software-properties \
  software-properties-common \
  unattended-upgrades \
  build-essential \
  python-dev \
  python2.7-dev \
  python-setuptools \
  ipython \
  htop \
  postgresql \
  postgresql-contrib \
  libpq-dev \
  libffi-dev \
  git-core \
  redis-server \
  nodejs \
  nginx-full \
  libxslt1-dev \
  libxml2-dev \
  libjpeg8 \
  libjpeg-dev \
  libjpeg62-dev \
  libpng12-dev \
  libfreetype6-dev \
  zlib1g-dev \
  ruby1.9.1 \
  ruby1.9.1-dev \
  fail2ban \
  upstart \
  logrotate \
  openjdk-7-jre \
  salt-master \
  salt-minion \
  salt-syndic \
  salt-cloud \
  salt-ssh \
  salt-api 

apt-get -y dist-upgrade
apt-get -y autoremove --purge

easy_install pip
pip install virtualenv uwsgi

gem install bundle

npm -g install yuglify jshint bower

# Base user
useradd -d /opt/deploy -G www-data deploy
echo deploy:$DEPLOY_PASS | chpasswd

mkdir -p /opt/deploy/.ssh/
mkdir -p "/opt/deploy/"$PROJECT_NAME"_app"

wget $KEYFILE_URL -O /opt/deploy/.ssh/authorized_keys

chown -R deploy:www-data "/opt/deploy/.ssh"
chown -R deploy:www-data "/opt/deploy/"$PROJECT_NAME"_app"

su postgres -c 'psql -c "CREATE user \"$PROJECT_NAME\" password '"'"'$DB_PASS'"'"';"'
su postgres -c "createdb -O $PROJECT_NAME $PROJECT_NAME"

# Salt
sed -i "s/#file_client: remote/file_client: local/g" /etc/salt/minion
mkdir -p /srv/salt
mkdir -p /srv/pillar
cd /tmp
git clone https://github.com/AxiaCore/django-server.git
cp -rf django-server/salt/* /srv/salt
chmod o+x /srv/salt/django-project/*.sh

SECRETKEY=`openssl rand -base64 48`
# Pillar
cat > /srv/pillar/data.sls << EOF
project_name: $PROJECT_NAME
uses_celery: $USE_CELERY
uses_ssl: $USE_SSL
uses_notifications: $USE_WS
fqdn: $FQDN
public_ip: $IPADDR
hostname: $HOSTNAME
repo_slug: $BITBUCKET_REPO
db_password: $DB_PASS
secret_key: $SECRETKEY
known_hosts_url: $KNOWN_HOSTS_URL
EOF

cat > /srv/pillar/top.sls << EOF
base:
  '*':
     - data
EOF

salt-call state.highstate --local pillar="{\"bb_user\":\"$BITBUCKET_USER\", \"bb_pass\":\"$BITBUCKET_PASS\"}"
